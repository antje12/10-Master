version: "3.9"

services:

  zookeeper-service:
    container_name: zookeeper-service
    image: confluentinc/cp-zookeeper:7.2.1
    ports:
      - 2181:2181
    restart: unless-stopped
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVERS: zookeeper-service:2888:3888
    networks:
      sharednetwork:

  kafka-service:
    container_name: kafka-service
    image: confluentinc/cp-kafka:7.2.1
    ports:
      - 19092:19092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-service:2181
      KAFKA_PARTITION_ASSIGNMENT_STRATEGY: org.apache.kafka.clients.consumer.RoundRobinAssignor
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:19092
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka-service:9092,EXTERNAL://localhost:19092"
    restart: unless-stopped
    depends_on:
      - zookeeper-service
    networks:
      sharednetwork:

  schema-registry-service:
    container_name: schema-registry-service
    image: confluentinc/cp-schema-registry:latest
    hostname: schema-registry-service
    restart: always
    depends_on:
      - kafka-service
    networks:
      sharednetwork:
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry-service
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "kafka-service:9092"
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8081"
      SCHEMA_REGISTRY_ACCESS_CONTROL_ALLOW_ORIGIN: "*"
      SCHEMA_REGISTRY_ACCESS_CONTROL_ALLOW_METHODS: "GET,POST,PUT,OPTIONS"

  kowl-service:
    container_name: kowl-service
    image: quay.io/cloudhut/kowl:master 
    ports:
      - 8080:8080
    restart: unless-stopped
    depends_on:
      - schema-registry-service
    environment:
      KAFKA_BROKERS: kafka-service:9092
      KAFKA_SCHEMAREGISTRY_ENABLED: true
      KAFKA_SCHEMAREGISTRY_URLS: http://schema-registry-service:8081
    networks:
      sharednetwork:
      
  mongodb-service:
    container_name: mongodb-service
    image: mongo:latest
    ports:
      - 27017:27017
    restart: unless-stopped
    volumes:
      - mongodb-service.vol:/data/db
    networks:
      sharednetwork:
      
  redis-stack:
    container_name: redis-stack
    image: redis/redis-stack:latest
    ports:
      - 6379:6379
      - 8001:8001
    restart: unless-stopped
    networks:
      sharednetwork:
  
  input-service:
    container_name: input-service
    image: ghcr.io/antje12/10-master/input-service:latest
    ports:
      - 81:80
    restart: unless-stopped
    depends_on:
      - schema-registry-service
      - mongodb-service
    networks:
      sharednetwork:
  
  collision-service:
    container_name: collision-service
    image: ghcr.io/antje12/10-master/collision-service:latest
    ports:
      - 82:80
    restart: unless-stopped
    depends_on:
      - schema-registry-service
      - mongodb-service
    networks:
      sharednetwork:
  
  world-service:
    container_name: world-service
    image: ghcr.io/antje12/10-master/world-service:latest
    ports:
      - 83:80
    restart: unless-stopped
    depends_on:
      - schema-registry-service
      - mongodb-service
    networks:
      sharednetwork:
  
  projectile-service:
    container_name: projectile-service
    image: ghcr.io/antje12/10-master/projectile-service:latest
    ports:
      - 84:80
    restart: unless-stopped
    depends_on:
      - schema-registry-service
      - mongodb-service
    networks:
      sharednetwork:
  
  ai-service:
    container_name: ai-service
    image: ghcr.io/antje12/10-master/ai-service:latest
    ports:
      - 85:80
    restart: unless-stopped
    depends_on:
      - schema-registry-service
      - mongodb-service
    networks:
      sharednetwork:

volumes:
  mongodb-service.vol:
    name: "mongodb-service.vol"

networks:
  sharednetwork:
    name: "sharednetwork"
