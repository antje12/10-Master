name: Build and deploy action
on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  PROJECT_ID: central-point-420213  # Cloud project
  GKE_CLUSTER: cluster-1            # Cluster name
  GKE_ZONE: europe-west10           # Cluster zone

jobs:

  unit-test-job:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code base
        uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0.x'
      - name: Install dependencies
        run: dotnet restore
        working-directory: TidesOfPower
      - name: Build
        run: dotnet build --configuration Release --no-restore
        working-directory: TidesOfPower
      - name: Test
        run: dotnet test --nologo --no-restore --verbosity quiet
        working-directory: TidesOfPower

  build-input-service-image:
    runs-on: ubuntu-latest
    needs: [unit-test-job]
    steps:
      - name: Checkout code base
        uses: actions/checkout@v2
      - name: Login to container registry 
        uses: docker/login-action@v3
        with: 
          registry: ghcr.io 
          username: ${{ github.actor }} 
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push InputService image to registry
        uses: docker/build-push-action@v2
        with:
          context: ./TidesOfPower
          file: ./TidesOfPower/InputService/Dockerfile
          push: true
          tags: |
            ghcr.io/antje12/10-master/input-service:GA-${{ github.sha }},
            ghcr.io/antje12/10-master/input-service:latest

  build-collision-service-image:
    runs-on: ubuntu-latest
    needs: [unit-test-job]
    steps:
      - name: Checkout code base
        uses: actions/checkout@v2
      - name: Login to container registry 
        uses: docker/login-action@v3
        with: 
          registry: ghcr.io 
          username: ${{ github.actor }} 
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push CollisionService image to registry
        uses: docker/build-push-action@v2
        with:
          context: ./TidesOfPower
          file: ./TidesOfPower/CollisionService/Dockerfile
          push: true
          tags: |
            ghcr.io/antje12/10-master/collision-service:GA-${{ github.sha }},
            ghcr.io/antje12/10-master/collision-service:latest

  build-world-service-image:
    runs-on: ubuntu-latest
    needs: [unit-test-job]
    steps:
      - name: Checkout code base
        uses: actions/checkout@v2
      - name: Login to container registry 
        uses: docker/login-action@v3
        with: 
          registry: ghcr.io 
          username: ${{ github.actor }} 
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push WorldService image to registry
        uses: docker/build-push-action@v2
        with:
          context: ./TidesOfPower
          file: ./TidesOfPower/WorldService/Dockerfile
          push: true
          tags: |
            ghcr.io/antje12/10-master/world-service:GA-${{ github.sha }},
            ghcr.io/antje12/10-master/world-service:latest

  build-projectile-service-image:
    runs-on: ubuntu-latest
    needs: [unit-test-job]
    steps:
      - name: Checkout code base
        uses: actions/checkout@v2
      - name: Login to container registry 
        uses: docker/login-action@v3
        with: 
          registry: ghcr.io 
          username: ${{ github.actor }} 
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push ProjectileService image to registry
        uses: docker/build-push-action@v2
        with:
          context: ./TidesOfPower
          file: ./TidesOfPower/ProjectileService/Dockerfile
          push: true
          tags: |
            ghcr.io/antje12/10-master/projectile-service:GA-${{ github.sha }},
            ghcr.io/antje12/10-master/projectile-service:latest

  build-ai-service-image:
    runs-on: ubuntu-latest
    needs: [unit-test-job]
    steps:
      - name: Checkout code base
        uses: actions/checkout@v2
      - name: Login to container registry 
        uses: docker/login-action@v3
        with: 
          registry: ghcr.io 
          username: ${{ github.actor }} 
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push AIService image to registry
        uses: docker/build-push-action@v2
        with:
          context: ./TidesOfPower
          file: ./TidesOfPower/AIService/Dockerfile
          push: true
          tags: |
            ghcr.io/antje12/10-master/ai-service:GA-${{ github.sha }},
            ghcr.io/antje12/10-master/ai-service:latest

  google-cloud-deploy:
    runs-on: ubuntu-latest
    needs: [build-input-service-image,build-collision-service-image,build-world-service-image,build-projectile-service-image,build-ai-service-image]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }}
          project_id: ${{ env.PROJECT_ID }}
      
      # Get the GKE credentials so we can deploy to the cluster
      - uses: google-github-actions/get-gke-credentials@v0.2.1
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
          credentials: ${{ secrets.SERVICE_ACCOUNT_KEY }}
