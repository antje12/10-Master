version: "3.9"

services:

  zookeeper-1:
    container_name: zookeeper-1
    image: confluentinc/cp-zookeeper:7.2.1
    ports:
      - 2181:2181
    restart: unless-stopped
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVERS: zookeeper-1:2888:3888
    networks:
      sharednetwork:

  kafka-1:
    container_name: kafka-1
    image: confluentinc/cp-kafka:7.2.1
    ports:
      - 19092:19092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181
      KAFKA_PARTITION_ASSIGNMENT_STRATEGY: org.apache.kafka.clients.consumer.RoundRobinAssignor
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:19092
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka-1:9092,EXTERNAL://localhost:19092"
    restart: unless-stopped
    depends_on:
      - zookeeper-1
    networks:
      sharednetwork:

  schema-registry:
    container_name: schema-registry
    image: confluentinc/cp-schema-registry:latest
    hostname: schema-registry
    restart: always
    depends_on:
      - kafka-1
    networks:
      sharednetwork:
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "kafka-1:9092"
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8081"
      SCHEMA_REGISTRY_ACCESS_CONTROL_ALLOW_ORIGIN: '*'
      SCHEMA_REGISTRY_ACCESS_CONTROL_ALLOW_METHODS: 'GET,POST,PUT,OPTIONS'

  kowl:
    container_name: kowl
    image: quay.io/cloudhut/kowl:master 
    ports:
      - 8080:8080
    restart: unless-stopped
    depends_on:
      - schema-registry
    environment:
      KAFKA_BROKERS: kafka-1:9092
      KAFKA_SCHEMAREGISTRY_ENABLED: true
      KAFKA_SCHEMAREGISTRY_URLS: http://schema-registry:8081
    networks:
      sharednetwork:
      
  mongodb-1:
    container_name: mongodb-1
    image: mongo:latest
    ports:
      - 27017:27017
    restart: unless-stopped
    volumes:
      - mongodb-1.vol:/data/db
    networks:
      sharednetwork:
  
  input-service:
    container_name: input-service
    build:
      context: ./TidesOfPower
      dockerfile: InputService/Dockerfile
    ports:
      - 81:80
    restart: unless-stopped
    depends_on:
      - mongodb-1
    networks:
      sharednetwork:
  
  collision-service:
    container_name: collision-service
    build:
      context: ./TidesOfPower
      dockerfile: CollisionService/Dockerfile
    ports:
      - 82:80
    restart: unless-stopped
    depends_on:
      - mongodb-1
    networks:
      sharednetwork:
  
  world-service:
    container_name: world-service
    build:
      context: ./TidesOfPower
      dockerfile: WorldService/Dockerfile
    ports:
      - 83:80
    restart: unless-stopped
    depends_on:
      - mongodb-1
    networks:
      sharednetwork:
  
  tick-service:
    container_name: tick-service
    build:
      context: ./TidesOfPower
      dockerfile: TickService/Dockerfile
    ports:
      - 84:80
    restart: unless-stopped
    depends_on:
      - mongodb-1
    networks:
      sharednetwork:

volumes:
  mongodb-1.vol:
    name: "mongodb-1.vol"

networks:
  sharednetwork:
    name: "sharednetwork"
